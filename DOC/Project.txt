=============================================================================
List of generated methods in project: Project

THIS TEXT DESCRIPTION IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
=============================================================================

Module "MotorR_EN" (bean BitIO)
   - MotorR_EN_SetDir -Sets a pin direction (available only if the direction = _[input/output]_).
   - MotorR_EN_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].
   - MotorR_EN_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a 
                memory or a register and this value will be written to the pin after switching to the output mode (using 
                [SetDir(TRUE)]; see <Safe mode> property for limitations). If the direction is [output], it writes the value to 
                the pin. (Method is available only if the direction = _[output]_ or _[input/output]_).
   - MotorR_EN_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.
   - MotorR_EN_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if 
                the direction = _[output]_ or _[input/output]_.

Module "MotorL_EN" (bean BitsIO)
   - MotorL_EN_GetDir -Return selected direction.
   - MotorL_EN_SetDir -Sets a direction for the pins (available only if Direction = _[input/output]_).
   - MotorL_EN_GetVal -Returns the value of the Input/Output component. If the direction is [input] then reads the input value 
                of the pins and returns it. If the direction is [output] then returns the last written value (see <Safe mode> 
                property for limitations).
   - MotorL_EN_PutVal -Specified value is passed to the Input/Output component. If the direction is [input] saves the value to 
                a memory or a register, this value will be written to the pins after switching to the output mode - using 
                [SetDir(TRUE)] (see <Safe mode> property for limitations). If the direction is [output] it writes the value to 
                the pins. (Method is available only if the Direction = _[output]_ or _[input/output]_).
   - MotorL_EN_GetBit -Returns the value of the specified bit/pin of the Input/Output component. If the direction is [input] 
                then it reads the input value of the pin and returns it. If the direction is [output] then it returns the last 
                written value (see <Safe mode> property for limitations).
   - MotorL_EN_PutBit -Specified value is passed to the specified bit/pin of the Input/Output component. If the direction is 
                [input] it saves the value to a memory or register, this value will be written to the pin after switching to 
                the output mode - using [SetDir(TRUE)] (see <Safe mode> property for limitations). If the direction is [output] 
                it writes the value to the pin. (Method is available only if the Direction = _[output]_ or _[input/output]_).
   - MotorL_EN_SetBit -Sets (to one) the specified bit of the Input/Output component. It is the same as [PutBit(Bit, TRUE)]. 
                (Method is available only if the Direction = _[output]_ or _[input/output]_).
   - MotorL_EN_ClrBit -Clears (sets to zero) the specified bit of the Input/Output component. It is the same as [PutBit(Bit, 
                FALSE)]. (Method is available only if the Direction = _[output]_ or _[input/output]_).
   - MotorL_EN_NegBit -Negates (inverts) the specified bit of the Input/Output component. It is the same as [PutBit(Bit,!
                GetBit(Bit))]. (Method is available only if the Direction = _[output]_ or _[input/output]_).

Module "MotorRDrive_LCD_DB" (bean BitsIO)
   - MotorRDrive_LCD_DB_GetDir -Return selected direction.
   - MotorRDrive_LCD_DB_SetDir -Sets a direction for the pins (available only if Direction = _[input/output]_).
   - MotorRDrive_LCD_DB_GetVal -Returns the value of the Input/Output component. If the direction is [input] then reads the 
                input value of the pins and returns it. If the direction is [output] then returns the last written value (see 
                <Safe mode> property for limitations).
   - MotorRDrive_LCD_DB_PutVal -Specified value is passed to the Input/Output component. If the direction is [input] saves the 
                value to a memory or a register, this value will be written to the pins after switching to the output mode - 
                using [SetDir(TRUE)] (see <Safe mode> property for limitations). If the direction is [output] it writes the 
                value to the pins. (Method is available only if the Direction = _[output]_ or _[input/output]_).
   - MotorRDrive_LCD_DB_GetBit -Returns the value of the specified bit/pin of the Input/Output component. If the direction is 
                [input] then it reads the input value of the pin and returns it. If the direction is [output] then it returns 
                the last written value (see <Safe mode> property for limitations).
   - MotorRDrive_LCD_DB_PutBit -Specified value is passed to the specified bit/pin of the Input/Output component. If the 
                direction is [input] it saves the value to a memory or register, this value will be written to the pin after 
                switching to the output mode - using [SetDir(TRUE)] (see <Safe mode> property for limitations). If the 
                direction is [output] it writes the value to the pin. (Method is available only if the Direction = _[output]_ 
                or _[input/output]_).
   - MotorRDrive_LCD_DB_SetBit -Sets (to one) the specified bit of the Input/Output component. It is the same as [PutBit(Bit, 
                TRUE)]. (Method is available only if the Direction = _[output]_ or _[input/output]_).
   - MotorRDrive_LCD_DB_ClrBit -Clears (sets to zero) the specified bit of the Input/Output component. It is the same as 
                [PutBit(Bit, FALSE)]. (Method is available only if the Direction = _[output]_ or _[input/output]_).
   - MotorRDrive_LCD_DB_NegBit -Negates (inverts) the specified bit of the Input/Output component. It is the same as 
                [PutBit(Bit,!GetBit(Bit))]. (Method is available only if the Direction = _[output]_ or _[input/output]_).

Module "MotorLDrive_1" (bean BitIO)
   - MotorLDrive_1_SetDir -Sets a pin direction (available only if the direction = _[input/output]_).
   - MotorLDrive_1_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read 
                and returned. If the direction is [output] then the last written value is returned (see <Safe mode> property 
                for limitations). This method cannot be disabled if direction is [input].
   - MotorLDrive_1_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a 
                memory or a register and this value will be written to the pin after switching to the output mode (using 
                [SetDir(TRUE)]; see <Safe mode> property for limitations). If the direction is [output], it writes the value to 
                the pin. (Method is available only if the direction = _[output]_ or _[input/output]_).
   - MotorLDrive_1_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is 
                available only if the direction = _[output]_ or _[input/output]_.
   - MotorLDrive_1_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.

Module "MotorLDrive_2" (bean BitIO)
   - MotorLDrive_2_SetDir -Sets a pin direction (available only if the direction = _[input/output]_).
   - MotorLDrive_2_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read 
                and returned. If the direction is [output] then the last written value is returned (see <Safe mode> property 
                for limitations). This method cannot be disabled if direction is [input].
   - MotorLDrive_2_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a 
                memory or a register and this value will be written to the pin after switching to the output mode (using 
                [SetDir(TRUE)]; see <Safe mode> property for limitations). If the direction is [output], it writes the value to 
                the pin. (Method is available only if the direction = _[output]_ or _[input/output]_).
   - MotorLDrive_2_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is 
                available only if the direction = _[output]_ or _[input/output]_.
   - MotorLDrive_2_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.

Module "MotorLDrive_4" (bean BitIO)
   - MotorLDrive_4_SetDir -Sets a pin direction (available only if the direction = _[input/output]_).
   - MotorLDrive_4_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read 
                and returned. If the direction is [output] then the last written value is returned (see <Safe mode> property 
                for limitations). This method cannot be disabled if direction is [input].
   - MotorLDrive_4_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a 
                memory or a register and this value will be written to the pin after switching to the output mode (using 
                [SetDir(TRUE)]; see <Safe mode> property for limitations). If the direction is [output], it writes the value to 
                the pin. (Method is available only if the direction = _[output]_ or _[input/output]_).
   - MotorLDrive_4_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is 
                available only if the direction = _[output]_ or _[input/output]_.
   - MotorLDrive_4_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.

Module "MotorLDrive_8" (bean BitIO)
   - MotorLDrive_8_SetDir -Sets a pin direction (available only if the direction = _[input/output]_).
   - MotorLDrive_8_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read 
                and returned. If the direction is [output] then the last written value is returned (see <Safe mode> property 
                for limitations). This method cannot be disabled if direction is [input].
   - MotorLDrive_8_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a 
                memory or a register and this value will be written to the pin after switching to the output mode (using 
                [SetDir(TRUE)]; see <Safe mode> property for limitations). If the direction is [output], it writes the value to 
                the pin. (Method is available only if the direction = _[output]_ or _[input/output]_).
   - MotorLDrive_8_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is 
                available only if the direction = _[output]_ or _[input/output]_.
   - MotorLDrive_8_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.

Module "Sensor"    (bean ADC)
   - Sensor_Measure -This method performs one measurement on all channels that are set in the component inspector. (Note: If 
                the <number of conversions> is more than one the conversion of A/D channels is performed specified number of 
                times.)
   - Sensor_GetValue8 -This method returns the last measured values of all channels justified to the left. Compared with 
                <GetValue> method this method returns more accurate result if the <number of conversions> is greater than 1 and 
                <AD resolution> is less than 8 bits. In addition, the user code dependency on <AD resolution> is eliminated.
   - Sensor_GetValue16 -This method returns the last measured values of all channels justified to the left. Compared with 
                <GetValue> method this method returns more accurate result if the <number of conversions> is greater than 1 and 
                <AD resolution> is less than 16 bits. In addition, the user code dependency on <AD resolution> is eliminated.

Module "MotorL_DutyTimer" (bean TimerInt)
   - MotorL_DutyTimer_Enable -This method enables the component - it starts the timer. Events may be generated 
                (<DisableEvent>/<EnableEvent>).
   - MotorL_DutyTimer_Disable -This method disables the component - it stops the timer. No events will be generated.

Module "MotorR_DutyTimer" (bean TimerInt)
   - MotorR_DutyTimer_Enable -This method enables the component - it starts the timer. Events may be generated 
                (<DisableEvent>/<EnableEvent>).
   - MotorR_DutyTimer_Disable -This method disables the component - it stops the timer. No events will be generated.

Module "MotorL_DriveTimer" (bean TimerInt)
   - MotorL_DriveTimer_Enable -This method enables the component - it starts the timer. Events may be generated 
                (<DisableEvent>/<EnableEvent>).
   - MotorL_DriveTimer_Disable -This method disables the component - it stops the timer. No events will be generated.
   - MotorL_DriveTimer_SetPeriodTicks16 -This method sets the new period of the generated events. The period is expressed in 
                CPU [ticks] as a 16-bit unsigned integer number. This method is available only if the runtime setting type 
                'from interval' is selected in the <Timing dialog box> in the Runtime setting area.
   - MotorL_DriveTimer_SetPeriodTicks32 -This method sets the new period of the generated events. The period is expressed in 
                CPU [ticks] as a 32-bit unsigned integer number. This method is available only if the runtime setting type 
                'from interval' is selected in the <Timing dialog box> in the Runtime setting area.
   - MotorL_DriveTimer_SetPeriodUS -This method sets the new period of the generated events. The period is expressed in 
                [microseconds] as a 16-bit unsigned integer number. This method is available only if the runtime setting type 
                'from interval' is selected in the <Timing dialog box> in the Runtime setting area.
   - MotorL_DriveTimer_SetPeriodMS -This method sets the new period of the generated events. The period is expressed in 
                [milliseconds] as a 16-bit unsigned integer number. This method is available only if the runtime setting type 
                'from interval' is selected in the <Timing dialog box> in the Runtime setting area.

Module "MotorR_DriveTimer" (bean TimerInt)
   - MotorR_DriveTimer_Enable -This method enables the component - it starts the timer. Events may be generated 
                (<DisableEvent>/<EnableEvent>).
   - MotorR_DriveTimer_Disable -This method disables the component - it stops the timer. No events will be generated.
   - MotorR_DriveTimer_SetPeriodTicks16 -This method sets the new period of the generated events. The period is expressed in 
                CPU [ticks] as a 16-bit unsigned integer number. This method is available only if the runtime setting type 
                'from interval' is selected in the <Timing dialog box> in the Runtime setting area.
   - MotorR_DriveTimer_SetPeriodTicks32 -This method sets the new period of the generated events. The period is expressed in 
                CPU [ticks] as a 32-bit unsigned integer number. This method is available only if the runtime setting type 
                'from interval' is selected in the <Timing dialog box> in the Runtime setting area.
   - MotorR_DriveTimer_SetPeriodUS -This method sets the new period of the generated events. The period is expressed in 
                [microseconds] as a 16-bit unsigned integer number. This method is available only if the runtime setting type 
                'from interval' is selected in the <Timing dialog box> in the Runtime setting area.
   - MotorR_DriveTimer_SetPeriodMS -This method sets the new period of the generated events. The period is expressed in 
                [milliseconds] as a 16-bit unsigned integer number. This method is available only if the runtime setting type 
                'from interval' is selected in the <Timing dialog box> in the Runtime setting area.

Module "PID"       (bean TimerInt)

Module "LCD_RS"    (bean BitIO)
   - LCD_RS_SetDir -Sets a pin direction (available only if the direction = _[input/output]_).
   - LCD_RS_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].
   - LCD_RS_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a memory 
                or a register and this value will be written to the pin after switching to the output mode (using 
                [SetDir(TRUE)]; see <Safe mode> property for limitations). If the direction is [output], it writes the value to 
                the pin. (Method is available only if the direction = _[output]_ or _[input/output]_).
   - LCD_RS_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.
   - LCD_RS_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if 
                the direction = _[output]_ or _[input/output]_.

Module "LCD_EN"    (bean BitIO)
   - LCD_EN_SetDir -Sets a pin direction (available only if the direction = _[input/output]_).
   - LCD_EN_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].
   - LCD_EN_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a memory 
                or a register and this value will be written to the pin after switching to the output mode (using 
                [SetDir(TRUE)]; see <Safe mode> property for limitations). If the direction is [output], it writes the value to 
                the pin. (Method is available only if the direction = _[output]_ or _[input/output]_).
   - LCD_EN_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.
   - LCD_EN_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if 
                the direction = _[output]_ or _[input/output]_.

Module "Cpu"       (bean MC9S12C32_48)
   - Cpu_EnableInt -Enable maskable interrupts
   - Cpu_DisableInt -Disable maskable interrupts
   - Cpu_SetWaitMode -Set low power mode - Wait mode.  For more information about the wait mode see documentation of this CPU.  
                Release from Wait mode: Reset or interrupt
   - Cpu_SetStopMode -Set low power mode - Stop mode.  For more information about the stop mode see documentation of this CPU.
   - Cpu_Delay100US -This method realizes software delay. The length of delay is at least 100 microsecond multiply input 
                parameter [us100]. As the delay implementation is not based on real clock, the delay time may be increased by 
                interrupt service routines processed during the delay. The method is independent on selected speed mode.

===================================================================================
